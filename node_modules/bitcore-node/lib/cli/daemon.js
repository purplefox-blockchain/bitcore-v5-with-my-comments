'use strict';

var program = require('commander');
var path = require('path');
var bitcore = require('..');

function main(servicesPath, additionalServices) {

  console.log('===== bitcore-node/lib/cli/daemon main start...');

  /* jshint maxstatements: 100 */

  var version = bitcore.version;
  var start = bitcore.scaffold.start;
  var findConfig = bitcore.scaffold.findConfig;
  var defaultConfig = bitcore.scaffold.defaultConfig;

  program
    .version(version)
    .description('Start the current node')
    .option('-c, --config <dir>', 'Specify the directory with Bitcore Node configuration');

  program.parse(process.argv);

  //if we define the config
  if (program.config) {
    console.log('cprogram.config before resolve(): '+program.config);
    program.config = path.resolve(process.cwd(), program.config);
    console.log('cprogram.config after resolve(): '+program.config);
  } else {
      console.log('program.config is not defined');
  }
  var configInfo = findConfig(program.config || process.cwd());
  if (!configInfo) {
    console.log('configInfo is not found, taking the default config');
    configInfo = defaultConfig({
      additionalServices: additionalServices
    });
  } else {
    console.log('configInfo is '+configInfo.path+' '+configInfo.config);
  }
  if (servicesPath) {
    console.log('servicesPath is '+servicesPath);
    configInfo.servicesPath = servicesPath;
  } else {
    console.log('servicesPath is not defined');
  }
  console.log('start(configInfo)...');
  //my understanding is, by providing a data object {path=..., config=...}
  //start() function is defined on the top, it is scaffold.start
  start(configInfo);
}

module.exports = main;
